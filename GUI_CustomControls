function InvoHudButton(screenPos: Rect, numAvailable : int, itemImage: Texture, itemtooltip: String) : boolean
{
  if(GUI.Button(screenPos, GUIContent(itemImage, itemtooltip), "HUD Button"))
  {
    return true;
  }
  GUI.Label( Rect(screenPos.xMax - 20, screenPos.yMax - 25, 20, 20), numAvailable.ToString());
  
  GUI.Label( Rect( 20, Screen.height - 130, 500, 100), GUI.tooltip);
}

function LeftStatusMeter(charImage : Texture, health : float, energy : float, bBarImage : Texture, hBarImage : Texture, eBarImage : Texture)
{
  GUI.BeginGroup( Rect(0, 0, 330, 125) );
  
  GUI.Label( Rect(40, 10, 272, 90), bBarImage );
  
  GUI.BeginGroup( Rect(40, 10, 218 * (health/10.0 +35, 90) );
  GUI.Label( Rect(0, 0, 272, 90), hBarImage );
  GUI.EndGroup();
  
  GUI.BeginGroup( Rect(40, 10, 218 * (energy/10.0) +10, 90) );
  GUI.Label( Rect(0, 0, 272, 90), eBarImage );
  GUI.EndGroup();
  
  GUI.Label( Rect(0, 0, 330, 125), charImage );
  
  GUI.EndGroup();
  
}

function RightStatusMeter(charImage : Texture, health : float, energy : float, bBarImage : Texture, hBarImage : Texture, eBarImage : Texture, bCircleImage : Texture)
{
  GUI.BeginGroup( Rect(Screen.width - 330, 0, 330, 125) );
  
  GUI.Label( Rect(40, 10, 272, 90), bBarImage );
  
  GUI.BeginGroup( Rect(40 + (218-218*(health/10.0)), 10, 218*(health/10.0, 90) );
  GUI.Label( Rect(0, 0, 272, 90), hBarImage );
  GUI.EndGroup();
  
  GUI.BeginGroup( Rect( 40 + (218-218*(energy/10.0)), 10, 218*(energy/10.0), 90) );
  GUI.Label( Rect(0, 0, 272, 90), eBarImage );
  GUI.EndGroup();
  
  GUI.Label( Rect(208, 0, 330, 125), bCircleImage );
  GUI.Label( Rect(208, 0, 330, 125), charImage );
  
  GUI.EndGroup();
}


